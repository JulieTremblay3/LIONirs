function Draw_HoleSpherical( oDispOpt, oInterDlgComm, oHelmet )

    persistent v_hPrevDispItems;
    
    %Effacer les anciens elements graphiques avant d'afficher les nouveaux
    if( ~isempty( v_hPrevDispItems ) )
        delete( v_hPrevDispItems(find( ishandle(v_hPrevDispItems) & (v_hPrevDispItems ~= 0) )));
        v_hPrevDispItems = [];
    end
    
    vColor = [1,1,1]; %get_ItemColor( oDispOpt, 'MRI_SurfaceHolesIntersectionMarkers' );
    
    
        %[VertexBuffer, IndexBuffer] = CreateSphereMesh( 0.0054, 4 );
    diameter = str2num(get_SphereDiameter(oDispOpt));
    [VertexBuffer, IndexBuffer] = CreateSphereMesh( diameter/100, 16 );
        vHoles = get_vHoles( oHelmet );
        mtg = get_Mtg( oHelmet );
        todisplay = [mtg.v_pSrc, mtg.v_pDet];
       if( get_DispOptChecked( oDispOpt, 'SphereHoles' ) )
        %Boucle d'affichage de point d'intersection entre le cortex et la normale
             for( p=1:numel(vHoles) )
%                  if vHoles(p).Type == 400 %~isempty(find(todisplay == p)) %vHoles(p).Type == 400
%                 v_hPrevDispItems(p) = patch( 'Vertices',  [VertexBuffer(:,1)+(vHoles(p).Coord.x),...
%                                                            VertexBuffer(:,2)+(vHoles(p).Coord.y), ...
%                                                            VertexBuffer(:,3)+(vHoles(p).Coord.z)], ...
%                                              'Faces', IndexBuffer, ...
%                                              'FaceColor', vColor, ...
%                                              'EdgeColor', 'none', ...
%                                              'FaceLighting', 'gouraud' );
%                  end
                if ~isempty(find(mtg.v_pSrc==p)) 
                                    v_hPrevDispItems(p) = patch( 'Vertices',  [VertexBuffer(:,1)+(vHoles(p).Coord.x),...
                                                           VertexBuffer(:,2)+(vHoles(p).Coord.y), ...
                                                           VertexBuffer(:,3)+(vHoles(p).Coord.z)], ...
                                             'Faces', IndexBuffer, ...
                                             'FaceColor', [69/256 55/256 214/256], ...
                                             'EdgeColor', 'none', ...
                                             'FaceLighting', 'gouraud' );
                    
                elseif ~isempty(find(mtg.v_pDet==p)) 
                     v_hPrevDispItems(p) = patch( 'Vertices',  [VertexBuffer(:,1)+(vHoles(p).Coord.x),...
                                                           VertexBuffer(:,2)+(vHoles(p).Coord.y), ...
                                                           VertexBuffer(:,3)+(vHoles(p).Coord.z)], ...
                                             'Faces', IndexBuffer, ...
                                             'FaceColor', [117/255 0 0], ...
                                             'EdgeColor', 'none', ...
                                             'FaceLighting', 'gouraud' );
                else
                   
                end
             end       
        end