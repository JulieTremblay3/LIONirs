function vcolors = smoothingpatch(filevertex,vcolor,dis)

[VertexBuffer faces_matrix, NV, NT] = Read_iMagic_SRX(filevertex);
id = find(vcolor);
vcolors = vcolor ;
for i = 1:numel(id)
    x = VertexBuffer(id(i),1);
    y = VertexBuffer(id(i),2);
    z = VertexBuffer(id(i),3);
    if 1
        %Agrandissement en cube
        idsmooth =  find(x+dis > VertexBuffer(:,1)&...
            x-dis < VertexBuffer(:,1)&...
            y+dis > VertexBuffer(:,2)&...
            y-dis < VertexBuffer(:,2)&...
            z+dis > VertexBuffer(:,3)&...
            z-dis < VertexBuffer(:,3));
        vcolors(idsmooth)=  1;
        %Fin agrandissement en cube

    else
        %Agrandissement en pseudo - sphere
        theta = 5:10:45; %echelon de l'angle
        dx = sin(theta*pi/180)*dis;
        dy = cos(theta*pi/180)*dis;
        for j=1:numel(dx) %axe des x
            idsmooth =  find(x+dx(j) > VertexBuffer(:,1)&...
                x-dx(j) < VertexBuffer(:,1)&...
                y+dy(j) > VertexBuffer(:,2)&...
                y-dy(j) < VertexBuffer(:,2)&...
                z+dy(j) > VertexBuffer(:,3)&...
                z-dy(j) < VertexBuffer(:,3));
            vcolors(idsmooth)=  1;
        end

        for j=1:numel(dx) %axe des y (small box x,z
            idsmooth =  find(x+dy(j) > VertexBuffer(:,1)&...
                x-dy(j) < VertexBuffer(:,1)&...
                y+dx(j) > VertexBuffer(:,2)&...
                y-dx(j) < VertexBuffer(:,2)&...
                z+dy(j) > VertexBuffer(:,3)&...
                z-dy(j) < VertexBuffer(:,3));
            vcolors(idsmooth)=  1;
        end
        for j=1:numel(dx) %axe des z (small box x,y)
            idsmooth =  find(x+dy(j) > VertexBuffer(:,1)&...
                x-dy(j) < VertexBuffer(:,1)&...
                y+dy(j) > VertexBuffer(:,2)&...
                y-dy(j) < VertexBuffer(:,2)&...
                z+dx(j) > VertexBuffer(:,3)&...
                z-dx(j) < VertexBuffer(:,3));
            vcolors(idsmooth)=  1;
        end
    end
end


end

